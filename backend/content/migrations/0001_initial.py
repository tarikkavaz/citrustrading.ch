# Generated by Django 4.2.4 on 2023-10-30 19:43

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/')),
                ('alt_text', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Post Title')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Post URL')),
                ('langslug', models.CharField(blank=True, max_length=255, verbose_name='Translation Link')),
                ('pageinfo', models.TextField(blank=True, verbose_name='Page Description')),
                ('content', ckeditor.fields.RichTextField(verbose_name='Post Content')),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('lang', models.CharField(blank=True, choices=[('en', 'English'), ('tr', 'Turkish')], default='en', max_length=7, verbose_name='Language')),
                ('order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
                ('categories', models.ManyToManyField(blank=True, to='content.category')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_selected_image', to='content.image', verbose_name='Selected Cover Image')),
                ('images', models.ManyToManyField(blank=True, related_name='post_images', to='content.image', verbose_name='Select Content Images')),
                ('tags', models.ManyToManyField(blank=True, to='content.tag')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Page Title')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Page URL')),
                ('langslug', models.CharField(blank=True, max_length=255, verbose_name='Translation Link')),
                ('pageinfo', models.TextField(blank=True, verbose_name='Page Description')),
                ('content', ckeditor.fields.RichTextField(verbose_name='Page Content')),
                ('lang', models.CharField(blank=True, choices=[('en', 'English'), ('tr', 'Turkish')], default='en', max_length=7, verbose_name='Language')),
                ('order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='page_selected_image', to='content.image', verbose_name='Selected Cover Image')),
                ('images', models.ManyToManyField(blank=True, related_name='page_images', to='content.image', verbose_name='Select Content Images')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('link', models.CharField(blank=True, max_length=500, null=True)),
                ('newtab', models.BooleanField(default=False, verbose_name='Open in new Tab')),
                ('order', models.PositiveIntegerField(db_index=True, default=0)),
                ('lang', models.CharField(blank=True, choices=[('en', 'English'), ('tr', 'Turkish')], default='en', max_length=7, verbose_name='Language')),
                ('page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.page')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submenus', to='content.menuitem')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Site Title')),
                ('pageinfo', models.TextField(blank=True, verbose_name='Site Description')),
                ('content', ckeditor.fields.RichTextField()),
                ('lang', models.CharField(blank=True, choices=[('en', 'English'), ('tr', 'Turkish')], default='en', max_length=7, verbose_name='Language')),
                ('images', models.ManyToManyField(blank=True, related_name='home_images', to='content.image', verbose_name='Select Content Images')),
                ('posts', models.ManyToManyField(blank=True, to='content.post', verbose_name='Select Posts to display on Homepage')),
            ],
        ),
    ]
